---
# Bootstrap apex-bridge
- name: Create wallets
  ansible.builtin.shell: apex-bridge wallet-create --chain {{ chain }} --dir {{ apex_bridge_home_dir }}/chains
  loop: "{{ cardano_chains }}"
  loop_control:
    loop_var: chain

- name: Get multisig and multisigfee verification keys
  ansible.builtin.shell: |
    cat {{ apex_bridge_home_dir }}/chains/{{ chain }}/multisig/payment.vkey | jq -r '.cborHex'
    cat {{ apex_bridge_home_dir }}/chains/{{ chain }}/multisigfee/payment.vkey | jq -r '.cborHex'
  loop: "{{ cardano_chains }}"
  loop_control:
    loop_var: chain
  register: verification_keys

- name: Create JSON file with multisig and multisigfee verification keys
  ansible.builtin.template:
    src: verification-keys-template.txt
    dest: "{{ apex_bridge_home_dir }}/chains/verification-keys.json"

- name: Fetch the JSON file with multisig and multisigfee verification keys
  ansible.builtin.fetch:
    src: "{{ apex_bridge_home_dir }}/chains/verification-keys.json"
    dest: "{{ role_path }}/templates/{{ hostvars[inventory_hostname].tags['Hostname'] }}-verification-keys.json"
    flat: true

- name: Copy the cardano data to hosts
  block:
    - name: Create a folder to hold the cardano archive
      ansible.builtin.file:
        path: "{{ apex_bridge_home_dir }}/cardano/"
        state: directory
        owner: "{{ apex_user }}"
        group: "{{ apex_user }}-group"
        mode: 0755
    - name: Copy the cardano archive to a remote system temp folder
      ansible.builtin.copy:
        src: "{{ role_path }}/templates/cardano.tar.gz"
        dest: "/tmp/cardano.tar.gz"
        owner: "{{ blade_user }}"
        group: "{{ blade_user }}-group"
        mode: 0755
    - name: Extract the cardano archive files
      ansible.builtin.unarchive:
        src: "/tmp/cardano.tar.gz"
        dest: "{{ apex_bridge_home_dir }}/"
        mode: 0755
        remote_src: true

- name: Register chains
  ansible.builtin.shell: |
    apex-bridge register-chain \
      --chain {{ chain }} \
      --keys-dir {{ apex_bridge_home_dir }}/cardano/{{ chain }} \
      --bridge-validator-config {{ blade_home_dir }}/bootstrap/secrets/{{ hostvars[inventory_hostname].tags.Hostname }}.{{ base_dn }}_config.json \
      --addr `cat {{ apex_bridge_home_dir }}/cardano/{{ chain }}/data.json | jq -r '.multisig'` \
      --addr-fee `cat {{ apex_bridge_home_dir }}/cardano/{{ chain }}/data.json | jq -r '.multisigfee'` \
      --token-supply `cat {{ apex_bridge_home_dir }}/cardano/{{ chain }}/data.json | jq -r '.tokensupply'` \
      --ogmios `cat {{ apex_bridge_home_dir }}/cardano/{{ chain }}/data.json | jq -r '.ogmiosurl'` \
      --bridge-url 0xABCDE0000000000000000000000000000000FFFF \
      --bridge-addr 0xABEF000000000000000000000000000000000000
  loop: "{{ cardano_chains }}"
  loop_control:
    loop_var: chain

- name: Generate configs
  ansible.builtin.shell: |
    apex-bridge generate-configs \
      --output-dir {{ apex_bridge_home_dir }}/configs \
      --prime-keys-dir {{ apex_bridge_home_dir }}/chains/prime \
      --prime-network-address URL_FOR_SOME_CARDANO_NODE_IN_PRIME_NETWORK \
      --prime-network-magic PRIME_NETWORK_MAGIC_NUMBER \
      --prime-ogmios-url PRIME_OGMIOS_URL \
      --vector-keys-dir {{ apex_bridge_home_dir }}/chains/vector \
      --vector-network-address URL_FOR_SOME_CARDANO_NODE_IN_VECTOR_NETWORK \
      --vector-network-magic VECTOR_NETWORK_MAGIC_NUMBER \
      --vector-ogmios-url VECTOR_OGMIOS_URL \
      --bridge-node-url URL_TO_BLADE_NODE \
      --bridge-sc-address 0xABEF000000000000000000000000000000000000 \
      --bridge-validator-data-dir PUTANJA_DO_BLADE_DATA_DIR
      --logs-path PUTANJA_DO_DIREKTORIJUMA_ZA_LOG_FAJLOVE \
      --dbs-path PUTANJA_DO_DIREKTORIJUMA_GDE_CE_BITI_FAJLOVE_BBOLT_BAZE \
      --api-port API_PORT \
      --api-keys test_api_key_1