---


- name: Create blade folders
  block:
    - name: Create folder for blade configs
      ansible.builtin.file:
        path: /etc/blade
        state: directory
        mode: 0700
        owner: "{{ blade_user }}"
        group: "{{ blade_user }}-group"

- name: Produce blade node lists
  block:
    - name: Produce blade fullnode list
      ansible.builtin.template:
        src: fullnodelist.txt
        dest: /etc/blade/fullnodelist.txt
        mode: 0700
    - name: Produce blade validator list
      ansible.builtin.template:
        src: validatorlist.txt
        dest: /etc/blade/validatorlist.txt
        mode: 0700

- name: Bootstrap blade
  ansible.builtin.include_tasks: bootstrap-blade.yml
  when: not restore_data

- name: Restore data
  ansible.builtin.include_tasks: restore-data.yml
  when: restore_data

- name: Create blade service file
  ansible.builtin.template:
    src: blade.service
    dest: /etc/systemd/system/blade.service
    mode: 0644

- name: Upload service files to bucket
  ansible.builtin.shell: aws s3 cp /etc/systemd/system/blade.service s3://{{deployment_name}}-state-bucket/{{ hostvars[inventory_hostname].tags["Hostname"] }}.service

- name: Upload service files to bucket
  ansible.builtin.shell: |
    aws s3 cp s3://{{deployment_name}}-state-bucket/{{deployment_name}}.blade.ethernal.private.tar.gz /tmp/{{deployment_name}}.blade.ethernal.private.tar.gz
    mkdir /var/lib/blade/bootstrap && chown blade /var/lib/blade/bootstrap && chgrp blade-group /var/lib/blade/bootstrap
    tar -xf /tmp/{{deployment_name}}.blade.ethernal.private.tar.gz --directory /var/lib/blade/bootstrap

- name: Restart Blade Service
  ansible.builtin.systemd:
    state: started
    name: blade
    enabled: true
